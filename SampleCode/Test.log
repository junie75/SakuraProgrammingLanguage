Page   1  Test.stm

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X0000               1  ;--------------------------------------------------------------
0X0000               2  ; Test.stm
0X0000               3  ;--------------------------------------------------------------
0X0000               4  ; SVC numbers
0X0000               5  SVC_DONOTHING          EQU       0D0                  ; force context switch
0X0000               6  SVC_TERMINATE          EQU       0D1
0X0000               7  SVC_READ_INTEGER       EQU       0D10
0X0000               8  SVC_WRITE_INTEGER      EQU       0D11
0X0000               9  SVC_READ_FLOAT         EQU       0D20
0X0000              10  SVC_WRITE_FLOAT        EQU       0D21
0X0000              11  SVC_READ_BOOLEAN       EQU       0D30
0X0000              12  SVC_WRITE_BOOLEAN      EQU       0D31
0X0000              13  SVC_READ_CHARACTER     EQU       0D40
0X0000              14  SVC_WRITE_CHARACTER    EQU       0D41
0X0000              15  SVC_WRITE_ENDL         EQU       0D42
0X0000              16  SVC_READ_STRING        EQU       0D50
0X0000              17  SVC_WRITE_STRING       EQU       0D51
0X0000              18  SVC_INITIALIZE_HEAP    EQU       0D90
0X0000              19  SVC_ALLOCATE_BLOCK     EQU       0D91
0X0000              20  SVC_DEALLOCATE_BLOCK   EQU       0D92
0X0000              21  
0X0000              22                         ORG       0X0000
0X0000              23  
0X0000  800003      24                         JMP       PROGRAMMAIN
0X0003              25  ;    1 ~~
0X0003              26  ;    2 ~~ Hello, World! program in Sakura
0X0003              27  ;    3 ~~
0X0003              28  ;    4    main:
0X0003              29  ;    5        output << `Hello, World!`<< ^n
0X0003              30  ; **** =========
0X0003              31  ; **** PROGRAM module (   4)
0X0003              32  ; **** =========
0X0003              33  PROGRAMMAIN            EQU       *
0X0003  0100FFFE    34                         PUSH      #RUNTIMESTACK        ; set SP
0X0007  0A          35                         POPSP     
0X0008  02010058    36                         PUSHA     STATICDATA           ; set SB
0X000C  0C          37                         POPSB     
0X000D  010000EE    38                         PUSH      #HEAPBASE            ; initialize heap
0X0011  01001000    39                         PUSH      #HEAPSIZE
0X0015  FF005A      40                         SVC       #SVC_INITIALIZE_HEAP
0X0018  A0002C      41                         CALL      PROGRAMBODY0010
0X001B  020A0000    42                         PUSHA     SB:0D0
0X001F  FF0033      43                         SVC       #SVC_WRITE_STRING
0X0022  FF002A      44                         SVC       #SVC_WRITE_ENDL
0X0025  01000000    45                         PUSH      #0D0                 ; terminate with status = 0
0X0029  FF0001      46                         SVC       #SVC_TERMINATE
0X002C              47  
0X002C              48  PROGRAMBODY0010        EQU       *
0X002C              49  ; **** PRINT statement (   5)
0X002C  020A001C    50                         PUSHA     SB:0D28
0X0030  FF0033      51                         SVC       #SVC_WRITE_STRING
0X0033  FF002A      52                         SVC       #SVC_WRITE_ENDL
0X0036  A1          53                         RETURN    
0X0037              54  ; **** =========
0X0037              55  ; **** END (   5)
0X0037              56  ; **** =========
Page   2  Test.stm

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X0037              57  
0X0037              58  ;------------------------------------------------------------
0X0037              59  ; Issue "Run-time error #X..X near line #X..X" to handle run-time errors
0X0037              60  ;------------------------------------------------------------
0X0037              61  HANDLERUNTIMEERROR     EQU       *
0X0037  FF002A      62                         SVC       #SVC_WRITE_ENDL
0X003A  020A002B    63                         PUSHA     SB:0D43
0X003E  FF0033      64                         SVC       #SVC_WRITE_STRING
0X0041  FF000B      65                         SVC       #SVC_WRITE_INTEGER
0X0044  020A003D    66                         PUSHA     SB:0D61
0X0048  FF0033      67                         SVC       #SVC_WRITE_STRING
0X004B  FF000B      68                         SVC       #SVC_WRITE_INTEGER
0X004E  FF002A      69                         SVC       #SVC_WRITE_ENDL
0X0051  01000001    70                         PUSH      #0D1
0X0055  FF0001      71                         SVC       #SVC_TERMINATE
0X0058              72  
0X0058              73  ;------------------------------------------------------------
0X0058              74  ; Static allocation of global data and PROGRAM module data
0X0058              75  ;------------------------------------------------------------
0X0058              76  STATICDATA             EQU       *
0X0058  001A001A    77                         DS        "Normal program termination"
0X005C  004E006F
0X0060  0072006D
0X0064  0061006C
0X0068  00200070
0X006C  0072006F
0X0070  00670072
0X0074  0061006D
0X0078  00200074
0X007C  00650072
0X0080  006D0069
0X0084  006E0061
0X0088  00740069
0X008C  006F006E
0X0090  000D000D    78                         DS        "Hello, World!"
0X0094  00480065
0X0098  006C006C
0X009C  006F002C
0X00A0  00200057
0X00A4  006F0072
0X00A8  006C0064
0X00AC  0021    
0X00AE  00100010    79                         DS        "Run-time error #"
0X00B2  00520075
0X00B6  006E002D
0X00BA  00740069
0X00BE  006D0065
0X00C2  00200065
0X00C6  00720072
0X00CA  006F0072
0X00CE  00200023
0X00D2  000C000C    80                         DS        " near line #"
0X00D6  0020006E
0X00DA  00650061
0X00DE  00720020
0X00E2  006C0069
Page   3  Test.stm

    LC  Object    Line  Source Line
------  --------  ----  -------------------------------------------------------------
0X00E6  006E0065
0X00EA  00200023
0X00EE              81  
0X00EE              82  ;------------------------------------------------------------
0X00EE              83  ; Heap space for dynamic memory allocation (to support future Sakura syntax)
0X00EE              84  ;------------------------------------------------------------
0X00EE              85  HEAPBASE               EQU       *
0X00EE              86  HEAPSIZE               EQU       0B0001000000000000   ; 8K bytes = 4K words
0X00EE              87  
0X00EE              88  ;------------------------------------------------------------
0X00EE              89  ; Run-time stack
0X00EE              90  ;------------------------------------------------------------
0X00EE              91  RUNTIMESTACK           EQU       0XFFFE


  PC   SP TOS0 TOS1 TOS2 mnemonic  information
---- ---- ---- ---- ---- --------- ----------------------------------------------
0000 FFFE                 JMP       0X0003
0003 FFFE                 PUSH      #memory[EA = 0X0005] = 0XFFFE
0007 FFFC FFFE            POPSP     SP = 0XFFFE
0008 FFFE                 PUSHA     memory[EA = 0X0058]
000C FFFC 0058            POPSB     SB = 0X0058
000D FFFE                 PUSH      #memory[EA = 0X000F] = 0X00EE
0011 FFFC 00EE            PUSH      #memory[EA = 0X0013] = 0X1000
-------------------------------------------------------------
FREE nodes list
   0X00EE:0X10ED(0X0FFC)
-------------------------------------------------------------
0015 FFFA 1000 00EE       SVC       #90 initialize heap, heapBase = 0X00EE, heapSize = 0X1000 words
0018 FFFE                 CALL      0X002C return to 0X001B
002C FFFC 001B            PUSHA     SB( 28) memory[EA = 0X0090]
0030 FFFA 0090 001B       SVC       #51 write string
Hello, World!
0033 FFFC 001B            SVC       #42 write ENDL
0036 FFFC 001B            RETURN    to 0X001B
001B FFFE                 PUSHA     SB(  0) memory[EA = 0X0058]
001F FFFC 0058            SVC       #51 write string
Normal program termination
0022 FFFE                 SVC       #42 write ENDL
0025 FFFE                 PUSH      #memory[EA = 0X0027] = 0X0000
0029 FFFC 0000            SVC       #1 terminate program with status 0, SP = 0XFFFE

